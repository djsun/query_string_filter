grammar Filter

  rule match
    and_expression / simple
  end
  
  rule and_expression
    simple ospace 'and' ospace match
    {
      def eval
        simple.eval.merge(match.eval)
      end
    }
  end
  
  rule simple
    fuzzy / equality / inequality
  end

  rule fuzzy
    key ospace ':' ospace strings
    {
      def eval
        { key.eval => /#{strings.eval}/ }
      end
    }
  end

  rule equality
    key ospace '=' ospace value
    {
      def eval
        { key.eval => value.eval }
      end
    }
  end

  rule inequality
    gt / gte / lt / lte
  end
  
  rule gt
    key ospace '>' ospace value
    {
      def eval
        { key.eval => { '$gt' => value.eval } }
      end
    }
  end
  
  rule gte
    key ospace '>=' ospace value
    {
      def eval
        { key.eval => { '$gte' => value.eval } }
      end
    }
  end
  
  rule lt
    key ospace '<' ospace value
    {
      def eval
        { key.eval => { '$lt' => value.eval } }
      end
    }
  end
  
  rule lte
    key ospace '<=' ospace value
    {
      def eval
        { key.eval => { '$lte' => value.eval } }
      end
    }
  end
  
  rule key
    [a-z_\.]+
    {
      def eval
        text_value
      end
    }
  end
  
  rule value
    integer / string
  end
  
  rule strings
    string more:(ospace ',' ospace string)*
    {
      def eval
        strings.map { |e| e.eval }.join("|")
      end
      
      def strings
        [string] + more.elements.map { |e| e.string }
      end
    }
  end
  
  rule string
    double_quoted_string / single_quoted_string / unquoted_string
  end

  rule double_quoted_string
    '"' (!'"' .)* '"'
    {
      def eval
        text_value[1 ... -1]
      end
    }
  end

  rule single_quoted_string
    '\'' (!'\'' .)* '\''
    {
      def eval
        text_value[1 ... -1]
      end
    }
  end
  
  rule unquoted_string
    [^<>=, ]+
    {
      def eval
        text_value
      end
    }
  end

  rule integer
    [0-9]+
    {
      def eval
        text_value.to_i
      end
    }
  end
  
  rule ospace
    ' '*
  end
  
  rule space
    ' '+
  end

end
